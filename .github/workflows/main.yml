name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Job to build and deploy the backend (FastAPI)
  build-deploy-backend:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        run: |
          cd backend
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests (optional)
        run: |
          # Add your backend test commands here
          echo "No backend tests specified"

      - name: Deploy backend to Azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.BACKEND_APP_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.BACKEND_PUBLISH_PROFILE }}

  # Job to build and deploy the frontend (React)
  build-deploy-frontend:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install frontend dependencies and build
        run: |
          cd frontend
          npm install
          npm run build

      - name: Deploy frontend to Azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.FRONTEND_APP_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.FRONTEND_PUBLISH_PROFILE }}

  # Job to provision infrastructure using Terraform
  terraform-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install unzip (Linux)
        run: sudo apt-get install unzip -y
        if: runner.os == 'Linux'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'  # Ensure Node.js is installed

      - name: Check Node.js version
        run: node --version

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.4.0'  # Specify your Terraform version

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
